class Solution {

    public int lengthOfLongestSubstring(String s) {
        int length = s.length();

        int res = 0;
        for (int i = 0; i < length; i++) {
            StringBuffer sb = new StringBuffer();
            char current = s.charAt(i);
            sb.append(current);
            for (int j = i + 1; j < length; j++) {
                char next = s.charAt(j);
                if (sb.indexOf(String.valueOf(next)) < 0) {
                    sb.append(next);
                } else {
                    break;

                }
            }
            if (sb.length() > res) {
                res = sb.length();
            }

        }

        return res;

    }
}

//runtime:213 ms
//memory:41.8 MB
